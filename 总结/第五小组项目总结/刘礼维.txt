项目业务总结
省点心APP,专供送货员使用,主要是解决登记送货员日常工作当中快速发货,签收,以及评价工单,外加日常送货的客户信息登记,客户关怀登一系列信息,除了保障公司业务支撑,还提升工作效率,还引入了消息中心,可以查询系统消息,个人消息,及时收到后台通知,以便快速完成任务,对于快递单,也可以在系统中对店铺进行快速评价,整个app就为了送货员效率提升的概念搭建
功能模块包括
送货单
客户中心
物流单
消息中心
客户关怀
个人中心

项目行业类型:  

	移动端H5app开发

项目建设目的:

	专供送货员使用,为了送货员效率提升的概念搭建
项目使用人员:

	送货员

功能模块---登录页
业务目的：客户实现登录
功能交互流程：用户输入账号密码点击登录后发起请求 从后端拿到token并保存在本地存储上后跳转到首页
运用到的技术组件：vue框架+vantUI组件
功能难点：需要配置好在每次发起请求的时候把token放在请求头里，并在每次进登录页面的时候判断本地是否有token有直接进首页 
总结收获：利用vue框架+vant组件，登录页已经完成了用户登录，跳转进首页功能

功能模块-客户关怀

业务目的:由于商务交涉需要,系统需要定期对客户进行关怀,上门走访,或者电话走访,需要对走访过的客户,录入客户的走访信息

功能交互流程:  一个客户可以无限制走访,客户必须是先创建客户,然后才可以走访,走访的客户必须是从客户列表查询出来的,走访的所有字段全部要求是必填,走  访信息不可更变

运用到了技术组件: vue框架 vant框架 Tabbar, TabbarItem,Popup工具

功能难点:vant框架 返回的时间格式不一样  需要用过滤器过滤成我们需要的字符串格式
	
总结收获: 更熟悉使用ui框架、学到了过滤器不一样的使用方法

功能模块-物流单评价

业务目的: 当前功能是对某互联网商务平台做的一个快递单订单评价,根据物流单,状态是尚未评价的物流单,进行一个物流评价,评价分别是使用了三个选项的情况进行打分

功能交互流程: 三项的平均分=本次评分,保留一位小数点四舍五入,评分,以及评分说明,前端根据不同的分数显示不同的笑脸,星星的分数也是,根据不同的分数进行变色
店铺评价: 最高5分 最低一分
物流评价: 最高5分 最低一分
快递评价: 最高5分 最低一分


运用到了技术组件: vue组件 tab标签分类 路由携带id跳转

功能难点: 请求数量接口比较多，需要做好分类 携带正确的参数再做请求 

总结收获: 对路由跳转 和 axios 的post get请求更加熟练

功能模块-客户中心

业务目的:目前公司因为业务发展,商务合作的大量客户信息,都没有进行录入系统,都是大脑记忆,所以对历史客户管理非常的不方便,从而需要构建一个客户信息登记功能,客户录入信息包括, 客户名称,联系方式,学历,年龄,性别,所属城市,公司名称,职务


功能交互流程:点击客户先进入客户视图,除了客户头像,名称,电话还包含大类视图
客户视图包含大类,资产分析,客户旗下企业,合作伙伴,年收入
资产分析
客户详情资产信息,列出当前客户的所有资产信息,包含字段 总收入,今年收入,同比收入,以及收入列表信息
包括 年份  收入信息
图里面叫收入分析,统一叫资产分析
客户旗下企业
列出客户旗下的所有企业信息,包含字段 企业名称,企业法人,注册日期 按照注册日期排序
合作伙伴
列出客户的所有合作伙伴信息,字段包含 合作伙伴名称,合作伙伴企业信息,合作伙伴年纪 
年收入信息	
列出客户当年收入信息,字段包含 月份,收入单位万,按照月份排序,百万金色,千万红色


运用到了技术组件: vue 组件 vantUI框架

功能难点: 每个页面都有导航栏并且导航栏基本一样所以做了组件化

总结收获: 对于vue的组件化使用 能更快的封装

功能模块-送货单

业务目的:系统核心功能,送货单,专门给送货员开放,工单类型分别是,待发货,待收货,待评价
待发货
待发货的订单,可以进行发货操作,操作需要填写信息为,客户名称,商品,数量,下单人,下单时间,收货人,联系电话,收货地址,物流单号
待收货
直接收货确认即可
待评价
需要对发货单进行评价,评价的话,可以对三个选项进行评分,描述相符,物流速度,服务质量,以及评价内容


功能交互流程:全部订单-> 所有的单都可以查看的到
待发货订单-> 可以看到未发货的订单 状态标识为 0
待收货订单-> 可以看到未收货的订单 状态标识为 10
评价订单 -> 可以看到已收货的订单 状态标识为 20(未评价),30(已评价)
 
可以执行的操作:
发货-> 需要填写收货人,联系电话,地址,物流单号
收货-> 点击收货按钮需要二次确认
评价-> 评分项有 “描述相符”, “物流速度”, “服务态度”, 每个评分项 最低1分,最高5分,可以添加评价描述(500字以内)
查看评价-> 展现出订单评价的情况


运用到了技术组件: vue框架  vantUI框架

功能难点: 这个功能里面有4个小模块  都是利用了组件化开发

总结收获:
	对于vantUI框架里面的小组件运用更熟悉，文档理解更清晰了


挑出最难的模块来总结,说出它为什么难,难在哪,你怎么完成的200字以上

 在这国庆7天的时间里，公司省点心app开发中或多或少都遇到了许许多多的小问题，而出现最多问题的就在省点心app的送货单模块了，送货单的业务功能模块多 包括了送货单,专门给送货员开放,工单类型分别是,待发货,待收货,待评价待发货，待发货的订单,可以进行发货操作,操作需要填写信息为,客户名称,商品,数量,下单人,下单时间,收货人,联系电话,收货地址,物流单号待收货直接收货确认即可待评价需要对发货单进行评价,评价的话,可以对三个选项进行评分,描述相符,物流速度,服务质量,以及评价内容，这些都需要根据原型文档和需求文档理解清楚再开始下手，业务规则复杂包含了全部订单-> 所有的单都可以查看的到待发货订单-> 可以看到未发货的订单 状态标识为 0待收货订单-> 可以看到未收货的订单 状态标识为 10评价订单 -> 可以看到已收货的订单 状态标识为 20(未评价),30(已评价) 可以执行的操作:发货-> 需要填写收货人,联系电话,地址,物流单号收货-> 点击收货按钮需要二次确认评价-> 评分项有 “描述相符”, “物流速度”, “服务态度”, 每个评分项 最低1分,最高5分,可以添加评价描述(500字以内)查看评价-> 展现出订单评价的情况  因为业务规则多并且复杂  所以后台接口也多 都需要看清楚后台需要的参数 正确返回给后台并拿到需要的数据，开始书写时  先把静态页面写好，数据请求接口封装好  做好组件化 认真检查后台返回的数据 处理好后渲染到页面



这个项目在编写完成后,整个项目出现了哪些角色,以及做了哪些内容工作

考点.项目中有原型,有需求文档,有设计切图,有接口文档,有前端页面,有人安排开发任务,这些都是哪些角色负责了哪些工作

https://www.kdocs.cn/view/l/sbu5TBj1F2Zc?f=130



整体总结,说出本次项目心得

这次做想法的感想.自己感想  100字以上
参与产品省点心app的开发。使用技术方法通过重构改进了产品的运行效率。从构建模式、实现方法、代码风格上进行了多方面的知识整理、分析和优化。并以此为契机，强化了效率优化的意识，学习了效率优化的方法，同时，增强了研发中兼顾效率的意识。
在工作中遇到非常多棘手的问题，不断请教同学们.有了他们的帮助和自己坚持努力，我发现我所遇到棘手问题越来越少，我再也不怕遇到问题。在未来的一年里我应该多锻炼自己表达能力和加强对普通话的学习，其次，对于技术方面了解不够全面，不够广泛，好多技术都还处于一个熟悉、认知阶段。在未来的日子里我会给自己拟定一些目标和学习、提升路线，让自己技术以及各方面不断的提高。不让自己只局限于技术方面的提升与提高在工作中我体会到了坚持就是胜利，程序员必须有较强的适应能力和承受能力,需要不断的进行学习补充新的知识,只有不断的扩充、更新自己的知识才能应变技术的更新与发展。

知识面的认识.新增了哪些知识面 100字以上 

token认证和传统的session认证

1.session认证：在服务端存储一份用户登录信息表，这份登录信息表在响应的时候传递给浏览器，以cookie的形式存储，再次发送请求的时候，携带着cookie一起发送过来就可以实现验证；

缺点：每一个用户都需要做一次认证，session是保存在内存中的，随着认证用户的增多，服务端的开销会明显增大；

并且session存储在A服务器上，这样对于分布式的应用而言，就失去了扩展性；

保存在cookie中容易受到跨站请求伪造的攻击；

2.token的鉴权机制：不需要在服务器端去保留用户的认证信息或者是会话信息。方便扩展

1.用户使用username和密码请求登录；

2.服务器进行验证用户信息；

3.服务器通过验证后给用户发送一个token

4.客户端存储token值，每次请求时都会附上该token值，保存在请求头中；

5.服务器端验证token，返回数据；

3.token的优势：无状态，可扩展和解耦；使用token无状态，后端不需要保持对token的记录，每一个token都是独立的，使用token能很好的解决跨域问题，

4.spring security 默认的登录验证是从cookie和session中过滤一个名为jsessionid字段，因为在登录成功后会把验证信息保存到这个对应的session中，所以根据那个字段的值取出对应的session就能获取是否已认证和相应的用户权限，

5.sessionid：session id的值应该是一个既不会重复，又不容易被找到规律以仿造的字符串 

Css尺寸单位
1.px、%、em、rem、cm、mm、in（英寸）、pt（磅）、vh、vw（视口宽度和高度）
computer 里生成的值 会有缓存 不建议用函数去处理一些值得计算 而是用 computer 来计算值，这样性能高。
:key ='id' id是列表返回的id 如果没有id 就写item 一般不建议 写 index (eslint会有警告错误信息) 写上key 是为了减少消耗 它会有个缓存。
v-for 和 v-if 不适合在同个div连用
数组对象排序
1、升序排序

var arr = [{name: "张三", age: 24}, {name: "李四", age: 25}, {name: "王五", age: 18}];
var compare = function (prop) {
    return function (obj1, obj2) {
        var val1 = obj1[prop];
        var val2 = obj2[prop];
        if (!isNaN(Number(val1)) && !isNaN(Number(val2))) {
            val1 = Number(val1);
            val2 = Number(val2);
        }
        if (val1 < val2) {
            return -1;
        } else if (val1 > val2) {
            return 1;
        } else {
            return 0;
        }            
    } 
}
//调用方式
arr.sort(compare("age"))
2、降序排序

var arr = [{name: "张三", age: 24}, {name: "李四", age: 25}, {name: "王五", age: 18}];
var compare = function (prop) {
    return function (obj1, obj2) {
        var val1 = obj1[prop];
        var val2 = obj2[prop];
        if (!isNaN(Number(val1)) && !isNaN(Number(val2))) {
            val1 = Number(val1);
            val2 = Number(val2);
        }
        if (val1 > val2) {
            return -1;
        } else if (val1 < val2) {
            return 1;
        } else {
            return 0;
        }            
    } 
}
//调用方式
arr.sort(compare("age"))

企业项目的认知学习.至今为止.你认为一个企业项目流程中,从一个项目到开发完成,都经历了哪些 200字以上
一个完整的项目流程主要分为以下几步：项目启动阶段，规划阶段，执行阶段，监控阶段，收尾阶段。
项目启动
产品经理和项目干系人确定项目方向，产品型项目的干系人包括公司领导、产品总监、技术总监等，项目的话则包括客户方领导、主要执行人等。
公司领导确认项目组团队组成，包括产品经理、研发项目经理、研发工程师、测试团队等。明确项目管理制度，每个阶段的成果产物需要进行相应的评审，评审有相应的《会议纪要》；从项目启动起，研发项目经理每周提供《项目研发周报》；测试阶段，测试工程师每周提供《项目测试周报》。产品经理进行需求调研，输出《需求调研》文档。需求调研的方式主要有背景资料调查和访谈。产品经理完成《业务梳理》。首先，明确每个项目的目标；其次，梳理项目涉及的角色；再来，每个角色要进行的事项；最后，再梳理整个系统分哪些端口，要有哪些业务模块，每个模块再包含哪些功能。需求阶段进入可视化产物的输出阶段，产品经理提供最简单也最接近成品的《产品原型》，线框图形式即可。在这个过程中还可能产生的包括业务流程图和页面跳转流程图。业务流程图侧重在不同节点不同角色所进行的操作，页面跳转流程图主要指不同界面间的跳转关系。


自己的成长结果  100字以上

学习新知识的感受是快乐的，特别是那些掌握了就感觉自己的天空更亮了一点的那种。但面对未知的领域，有时也会感到前途漫漫，步履维艰。这种感觉来自于我独自一人承担一个项目的开发的时候。通过这个小项目，我也明白了一点：在做项目的过程中，学习新知识的速度是最快的，或许这也是为什么在学校的学习中要考试的原因吧。如果没有考试，学习似乎也就没有了目的（毕竟能看到长远目的的人数不多，即使看到了能坚持学习的更少了），漫无目的地做事情的效率和结果可想而知。这也正如电影《私人定制》里的一个理念：在需要使用的时候，缺什么就恶补什么，不得不承认，这恶补的效果是立竿见影的。项目驱动式学习，或者说是结果导向式学习使我受益匪浅。

自己薄弱的地方 列出5项以上.实在是强的可以3项
1对于组件化一开始还是不太擅长
2注释没怎么写 到后面发现问题的时候很难修改
3项目初始化 需要的东西很多都忘了
4项目开发过程中 很多知识点都忘了 比如(过滤器的使用，css样式属性的运用）
5看原型文档和需求文档要看 粗心大意 有时会漏掉一些重要的功能
对项目的建议:  不少于200字
1、请尽可能多的来测试你的APP
随机找10、20或50个人来测试你的APP，时刻跟踪他们，请他们将自己的感受坦白告诉我们。认真倾听他们的观感和意见，观察他们使用应用的方式，特别注意 他们对什么最不满意。我们可能会通过假设的方式来完善APP，但是这些测试人员给出的意见比大多数分析软件能够给出的修改意见更为中肯。
2、换位思考，从用户的角度去感受APP
强迫自己像应用用户一样去思考。将自己放在用户的位置上，当然，你最好尽可能去使用你的APP。我们最近一直在这么做，因为现在他们通常会坐在汽车里点餐。我们必须打破常规思维，象驾驶员一样思考问题。这是一项挑战，也是开发出最棒的APP的一项秘诀。
3、专注于提供最有用的功能
开发员在开发APP时很容易陷入一种被称作“功能蔓延”的陷阱。开发员总想在用户体验中加入更多的新功能，但是这并不正确，你应该学会对新功能说“不”，并且专注于为用户提供最有用的功能。数量有限但强大的功能比数量众多但却并不专精的功能更好。
4、神形合一，整合外观和功能
你必须兼具编程员和用户界面设计师两种身份，通过你的产品提供最棒的用户体验。编程员可以保证结构上的逻辑合理性，设计师则保证应用在人工美学上的特点。 当然，你还需要测试你的产品，但是从兼顾外观和功能的角度开始，至少可以保证你能够在获得了充分的信息后再作出决定。
根据资深的APP开发经验，告诉你必须想到你的应用在实际生活中的使用方式，而不仅仅是用户将如何点击屏幕。而且，你还要考虑他们使用的其他应用对他们的行为造成了什么样的影响。按照这两条原则去做，你就可以创造出更直观、更友好的用户体验。

说出你的工作方法,你会先做什么,后做什么,按照顺序写出来

 先初始化项目  再写静态页面 做好请求接口 了解后台需要的数据 做好业务功能逻辑 渲染页面
